{{ 'component-card.css' | asset_url | stylesheet_tag }}
{{ 'component-price.css' | asset_url | stylesheet_tag }}
{{ 'component-slider.css' | asset_url | stylesheet_tag }}
{{ 'template-collection.css' | asset_url | stylesheet_tag }}

{%- unless section.settings.quick_add == 'none' -%}
  {{ 'quick-add.css' | asset_url | stylesheet_tag }}
  <script src="{{ 'product-form.js' | asset_url }}" defer="defer"></script>
{%- endunless -%}

{%- if section.settings.quick_add == 'standard' -%}
  <script src="{{ 'quick-add.js' | asset_url }}" defer="defer"></script>
{%- endif -%}

{%- if section.settings.quick_add == 'bulk' -%}
  <script src="{{ 'quick-add-bulk.js' | asset_url }}" defer="defer"></script>
  <script src="{{ 'quantity-popover.js' | asset_url }}" defer="defer"></script>
  <script src="{{ 'price-per-item.js' | asset_url }}" defer="defer"></script>
  <script src="{{ 'quick-order-list.js' | asset_url }}" defer="defer"></script>
{%- endif -%}

<section class="collection-tabs  section-{{ section.id }}-padding">

<div class="page-width">

  <h2 class="title inline-richtext text-center">{{ section.settings.section_heading }}</h2>

  <!-- Tabs -->
  <div class="tabs-buttons flex justify-center gap-4 my-6">
    {% for block in section.blocks %}
      <button 
        class="tab-btn {% if forloop.first %}active{% endif %}" 
        data-tab="tab-{{ block.id }}">
        {{ block.settings.tab_label }}
      </button>
    {% endfor %}
  </div>

  <!-- Tabs Content -->
  <div class="tabs-content">
    {% for block in section.blocks %}
      {% assign collection = collections[block.settings.collection] %}
      <div id="tab-{{ block.id }}" class="tab-panel {% if forloop.first %}active{% endif %}">
        {% if collection != blank and collection.products.size > 0 %}

          {% if section.settings.enable_swiper %}
          <!-- Swiper Slider -->
           <div class="swiper-main__wrap">
              <div class="swiper collection-swiper">
            <div class="swiper-wrapper">
              {% for product in collection.products limit: section.settings.products_to_show %}
                <div class="swiper-slide">
                  {% render 'card-product',
                    card_product: product,
                    media_aspect_ratio: section.settings.image_ratio,
                    image_shape: section.settings.image_shape,
                    show_secondary_image: section.settings.show_secondary_image,
                    show_vendor: section.settings.show_vendor,
                    show_rating: section.settings.show_rating,
                    section_id: section.id,
                    quick_add: section.settings.quick_add
                  %}
                </div>
              {% endfor %}
            </div>
            <!-- Arrows -->
            
          </div>
            <div class="swiper-button-prev" style="display: none;">  
              <svg xmlns="http://www.w3.org/2000/svg" width="23" height="43" viewBox="0 0 23 43" fill="none">
                <path d="M21.5 41.6257L1.5 21.6257L21.5 1.62573" stroke="#121212" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
              </svg>
            </div>
            <div class="swiper-button-next" style="display: none;">
              <svg xmlns="http://www.w3.org/2000/svg" width="23" height="43" viewBox="0 0 23 43" fill="none">
              <path d="M1.5 41.6257L21.5 21.6257L1.5 1.62573" stroke="#121212" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
            </svg>
            </div>
           </div>


           <div class="swiper-pagination"></div>
        
          {% else %}
          <!-- Normal Grid -->
          <ul class="grid product-grid grid--2-col tablet:grid--3-col grid--4-col-desktop">
            {% for product in collection.products limit: section.settings.products_to_show %}
              <li class="grid__item">
                {% render 'card-product',
                  card_product: product,
                  media_aspect_ratio: section.settings.image_ratio,
                  image_shape: section.settings.image_shape,
                  show_secondary_image: section.settings.show_secondary_image,
                  show_vendor: section.settings.show_vendor,
                  show_rating: section.settings.show_rating,
                  section_id: section.id,
                  quick_add: section.settings.quick_add
                %}
              </li>
            {% endfor %}
          </ul>
          {% endif %}

        {% else %}
          <p>No products found for this collection</p>
        {% endif %}
      </div>
    {% endfor %}
  </div>
</div>

</section>

<style>

section.collection-tabs {
    background: #F8F6F4;
    padding: 60px 0;
    display: inline-block;
    width: 100%;
    vertical-align: top;
    position: relative;
}

section.collection-tabs h2.title {
    text-align: center;
    margin: 0 0 30px;
}

section.collection-tabs .tabs-buttons {
    margin: 0 0 30px;
    display: flex;
    gap: 30px;
    justify-content: center;
}
.collection-tabs .tab-btn {
    cursor: pointer;
    transition: 0.3s;
    line-height: 50px;
    padding: 0 32px;
    border-radius: 10px;
    border: 1px solid #DCDCDC;
    background: #FFF;
    color: #141132;
    font-family: Montserrat;
    font-size: 14px;
    font-style: normal;
    font-weight: 600;
    text-transform: uppercase;
    transition: all .4s ease;
}
.collection-tabs .tab-btn.active {
background: linear-gradient(90deg, #42C5EF 0%, #0033A0 100%);
color: #fff;
}
.tab-panel { display: none; }
.tab-panel.active { display: block; }

/* Swiper arrows */
.collection-swiper .swiper-button-next,
.collection-swiper .swiper-button-prev {
  color: #0033A0;
}

.swiper-main__wrap {
    position: relative;
        padding: 0 10px 10px;
}

.swiper-main__wrap .swiper-button-next:after,  .swiper-main__wrap .swiper-button-prev:after {
    display: none;
}

.swiper-main__wrap .swiper-button-next {
    right: -34px;
}

.swiper-main__wrap .swiper-button-next svg, .swiper-main__wrap .swiper-button-prev svg {
    width: 40px;
    height: 32px;
}

.swiper-main__wrap .swiper-button-prev {
    left: -34px;
}

.swiper-main__wrap .swiper-button-next, .swiper-main__wrap .swiper-button-prev {
  display: none; /* hide before init */
}

section.collection-tabs  .swiper-pagination {
   display: none;
}

  @media only screen and (max-width: 767px) {
    section.collection-tabs {
    padding: 30px 0 60px;
}

section.collection-tabs  .swiper-pagination {
    bottom: 20px !important;
    display: block;
}



.swiper-main__wrap .swiper-button-next, .swiper-main__wrap .swiper-button-prev {
  display: none !important;
}

section.collection-tabs .tabs-buttons {
            gap: 19px;
        overflow-x: auto;
        justify-content: flex-start;
        padding-bottom: 10px;
}

.collection-tabs .tab-btn {
    padding: 0 20px;
    line-height: 40px;
            white-space: nowrap;
}
   }


</style>

<script>
document.addEventListener("DOMContentLoaded", function() {
  const buttons = document.querySelectorAll(".collection-tabs .tab-btn");
  const panels = document.querySelectorAll(".collection-tabs .tab-panel");

  // Store initialized Swipers
  const swipers = {};

  function initSwiper(panel) {
    const swiperEl = panel.querySelector(".collection-swiper");
    if (swiperEl && !swipers[panel.id]) {
      // Get navigation elements with more specific selectors
      const nextBtn = panel.querySelector(".swiper-button-next");
      const prevBtn = panel.querySelector(".swiper-button-prev");
      const pagination = panel.querySelector(".swiper-pagination");

      swipers[panel.id] = new Swiper(swiperEl, {
        slidesPerView: 1,
        spaceBetween: 30,
        navigation: {
          nextEl: nextBtn,
          prevEl: prevBtn,
        },
        pagination: {
          el: pagination,
          clickable: true,
        },
        breakpoints: {
          0: {
            slidesPerView: 1,
            navigation: {
              nextEl: nextBtn,
              prevEl: prevBtn,
            },
            pagination: {
              el: pagination,
              clickable: true,
            }
          },
          768: {
            slidesPerView: 2,
            navigation: {
              nextEl: nextBtn,
              prevEl: prevBtn,
            },
            pagination: false
          },
          1024: {
            slidesPerView: 4,
            navigation: {
              nextEl: nextBtn,
              prevEl: prevBtn,
            },
            pagination: false
          }
        },
        on: {
          init: function() {
            // Show/hide navigation based on screen size
            updateNavigationVisibility(panel);
          },
          breakpoint: function() {
            // Update navigation visibility when breakpoint changes
            updateNavigationVisibility(panel);
          }
        }
      });
    }
  }

  function updateNavigationVisibility(panel) {
    const wrap = panel.querySelector(".swiper-main__wrap");
    const nextBtn = wrap?.querySelector(".swiper-button-next");
    const prevBtn = wrap?.querySelector(".swiper-button-prev");
    const pagination = panel.querySelector(".swiper-pagination");

    if (window.innerWidth > 767) {
      // Desktop: show arrows, hide pagination
      if (nextBtn) nextBtn.style.display = "flex";
      if (prevBtn) prevBtn.style.display = "flex";
      if (pagination) pagination.style.display = "none";
    } else {
      // Mobile: hide arrows, show pagination
      if (nextBtn) nextBtn.style.display = "none";
      if (prevBtn) prevBtn.style.display = "none";
      if (pagination) pagination.style.display = "block";
    }
  }

  // Initialize Swiper for all panels
  panels.forEach(panel => {
    if (panel.id) { // Make sure panel has an ID
      initSwiper(panel);
    }
  });

  // Tab switching logic
  buttons.forEach(btn => {
    btn.addEventListener("click", () => {
      // Remove active class from all buttons and panels
      buttons.forEach(b => b.classList.remove("active"));
      panels.forEach(panel => panel.classList.remove("active"));

      // Add active class to clicked button
      btn.classList.add("active");

      // Show corresponding panel
      const activePanel = document.getElementById(btn.dataset.tab);
      if (activePanel) {
        activePanel.classList.add("active");

        // Update swiper if it exists
        if (swipers[activePanel.id]) {
          // Small delay to ensure panel is visible before updating
          setTimeout(() => {
            swipers[activePanel.id].update();
            updateNavigationVisibility(activePanel);
          }, 10);
        }
      }
    });
  });

  // Handle window resize
  window.addEventListener('resize', () => {
    panels.forEach(panel => {
      if (panel.classList.contains('active')) {
        updateNavigationVisibility(panel);
      }
    });
  });
});


</script>

{% schema %}
{
  "name": "Collection Tabs",
  "settings": [
    {
      "type": "text",
      "id": "section_heading",
      "label": "Section Heading",
      "default": "Customer Favorites"
    },
    {
      "type": "range",
      "id": "products_to_show",
      "label": "Products to Show",
      "min": 4,
      "max": 20,
      "step": 1,
      "default": 8
    },
    {
      "type": "checkbox",
      "id": "enable_swiper",
      "label": "Enable Swiper Slider",
      "default": true
    },
    {
      "type": "select",
      "id": "image_ratio",
      "label": "Image ratio",
      "options": [
        { "value": "adapt", "label": "Adapt to image" },
        { "value": "square", "label": "Square" },
        { "value": "portrait", "label": "Portrait" }
      ],
      "default": "adapt"
    },
    {
      "type": "select",
      "id": "image_shape",
      "label": "Image shape",
      "options": [
        { "value": "default", "label": "Default" },
        { "value": "arch", "label": "Arch" },
        { "value": "blob", "label": "Blob" }
      ],
      "default": "default"
    },
    {
      "type": "checkbox",
      "id": "show_secondary_image",
      "label": "Show secondary image on hover",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_vendor",
      "label": "Show product vendor",
      "default": false
    },
    {
      "type": "checkbox",
      "id": "show_rating",
      "label": "Show product rating",
      "default": true
    },
    {
      "type": "select",
      "id": "quick_add",
      "label": "Quick add button",
      "options": [
        { "value": "none", "label": "None" },
        { "value": "standard", "label": "Standard" },
        { "value": "bulk", "label": "Bulk" }
      ],
      "default": "standard"
    }
  ],
  "blocks": [
    {
      "type": "collection_tab",
      "name": "Collection Tab",
      "settings": [
        {
          "type": "text",
          "id": "tab_label",
          "label": "Tab Label",
          "default": "Power Picks"
        },
        {
          "type": "collection",
          "id": "collection",
          "label": "Select Collection"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Collection Tabs",
      "blocks": [
        { "type": "collection_tab" },
        { "type": "collection_tab" },
        { "type": "collection_tab" }
      ]
    }
  ]
}
{% endschema %} 
