{% comment %} Determine video source based on settings {% endcomment %}
{% assign video_source = '' %}
{% assign has_videos = false %}

{% if section.settings.show_usage %}
  {% comment %} This is the CLINIC USAGE section - only show clinic videos {% endcomment %}
  {% if product.metafields.custom.video_clinical_usage != blank %}
    {% assign video_source = product.metafields.custom.video_clinical_usage | strip %}
  {% endif %}
{% else %}
  {% comment %} This is the FEEDBACK section - only show feedback videos {% endcomment %}
  {% if product.metafields.custom.video_feedback != blank %}
    {% assign video_source = product.metafields.custom.video_feedback | strip %}
  {% endif %}
{% endif %}

{% comment %} Validate that we have actual video URLs {% endcomment %}
{% if video_source != blank %}
  {% assign raw_videos = video_source | split: ',' %}
  {% for video in raw_videos %}
    {% assign url = video | strip %}
    {% if url != blank %}
      {% assign has_videos = true %}
      {% break %}
    {% endif %}
  {% endfor %}
{% endif %}

{% if has_videos %}
<section class="real-results-section" id="videoSection-{{ section.id }}">
  <div class="page-width">

    <div class="title-wrap">
      {% if section.settings.content %}
        {{ section.settings.content }}
      {% endif %}
      <h2>{{ section.settings.heading }}</h2>
    </div>

    <div class="results-wrap">
      {% assign raw_videos = video_source | split: ',' %}
      {% assign video_count = 0 %}
      
      {% comment %} Count actual valid videos {% endcomment %}
      {% for video in raw_videos %}
        {% assign url = video | strip %}
        {% if url != blank %}
          {% assign video_count = video_count | plus: 1 %}
        {% endif %}
      {% endfor %}
      
      {% assign grid_class = 'grid-2' %}
      {% if video_count == 3 %}
        {% assign grid_class = 'grid-3' %}
      {% elsif video_count >= 4 %}
        {% assign grid_class = 'grid-4' %}
      {% endif %}

      <div class="videos-grid {{ grid_class }}">
        {% for video in raw_videos %}
          {% assign url = video | strip %}
          {% if url != blank %}
            {% if url contains 'watch?v=' %}
              {% assign video_id = url | split: 'watch?v=' | last | split: '&' | first %}
            {% elsif url contains 'youtu.be/' %}
              {% assign video_id = url | split: 'youtu.be/' | last | split: '?' | first %}
            {% elsif url contains 'youtube.com/embed/' %}
              {% assign video_id = url | split: 'youtube.com/embed/' | last | split: '?' | first %}
            {% elsif url contains 'youtube.com/shorts/' %}
              {% assign video_id = url | split: 'youtube.com/shorts/' | last | split: '?' | first %}
            {% else %}
              {% assign video_id = url | split: '/' | last | split: '?' | first %}
            {% endif %}

            <div class="grid-item">
              <div class="real-results-slide">
                <div class="video-container">
                  <iframe 
                    src="https://www.youtube.com/embed/{{ video_id }}?rel=0&showinfo=0"
                    title="Customer Feedback Video"
                    frameborder="0"
                    allowfullscreen
                    loading="lazy"
                  ></iframe>
                </div>
              </div>
            </div>
          {% endif %}
        {% endfor %}
      </div>
    </div>
  </div>
</section>
{% endif %}

<style>
.real-results-section {
  text-align: center;
    padding: 40px 0;
    position: relative;
    background: #fff;
}

.ytp-large-play-button.ytp-shorts-mode {
  opacity: 0;
}

.real-results-section .title-wrap {
    text-align: center;
    margin:  0 0 30px;
}

.real-results-section .title-wrap h2 {
    margin: 0;
    color: #010005;
text-align: center;
font-family: Montserrat;
font-size: 44px;
font-style: normal;
font-weight: 700;
line-height: normal;
text-transform: uppercase;
}

.real-results-section .title-wrap p {
    margin: 0 0 15px;
    text-align: center;
    font-family: Prompt;
    font-size: 18px;
    font-style: normal;
    font-weight: 600; 
    line-height: 27px;
    letter-spacing: 2.7px;
    text-transform: uppercase;
    background: linear-gradient(90deg, #42C5EF 0%, #0033A0 100%); 
    background-clip: text;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
}

.real-results-slide {
  position: relative;
}

.real-results-section .video-container {
  position: relative;
  overflow: hidden;
  width: 100%;
  min-height: 581px;
  height: 581px;
  border-radius: 20px;
}

.videos-grid {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  gap: 30px;
  max-width: 100%;
  width: 100%;
}

.videos-grid.grid-2 .grid-item {
 width: 100%;
    flex-shrink: 0;
    max-width: 420px;
}

.videos-grid.grid-4 .grid-item {
  width: calc(25% - 22.5px);
  min-width: 280px;
  max-width: 320px;
  flex-shrink: 0;
}

.grid-item {
  flex-shrink: 0;
}

.video-thumbnail {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  object-fit: cover;
  z-index: 2;
  background: #000;
  transition: opacity 0.3s ease;
}

.video-container.playing .video-thumbnail {
  opacity: 0;
  pointer-events: none;
}

.real-results-section .custom-play-button svg {
  width: 64px;
  height: 64px;
  transition: all 0.3s ease;
}

.real-results-section .custom-play-button {
position: absolute;
    cursor: pointer;
    z-index: 2;
    transition: all 0.3s ease;
    opacity: 1;
    border-radius: 50%;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

.real-results-section .custom-play-button:hover svg {
  transform: scale(1.1);
}

.real-results-section .video-container.playing .custom-play-button {
  opacity: 0;
  pointer-events: none;
}

.real-results-section .video-container:hover.playing .custom-play-button {
  opacity: 1;
  pointer-events: all;
}

.video-container.loading::after {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 40px;
  height: 40px;
  margin: -20px 0 0 -20px;
  border: 3px solid rgba(255, 255, 255, 0.3);
  border-top: 3px solid #fff;
  border-radius: 50%;
  animation: spin 1s linear infinite;
  z-index: 5;
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

.results-wrap {
     display: flex;
    gap: 0;
    padding-left: 0;
    justify-content: center;
    width: 100%;
}

.results-wrap .left-content {
  max-width: 450px;
  display: inline-block;
  text-align: left;
  flex-shrink: 0;
}

.results-wrap .left-content h2 {
  color: #1F1F1F;
  font-size: 36px;
  font-style: normal;
  font-weight: 600;
  line-height: normal;
  text-transform: capitalize;
  margin: 0 0 20px;
}

.results-wrap .left-content .hp-customer {
  display: flex;
  align-items: center;
  gap: 10px;
  margin-top: 58px;
}

.results-wrap .left-content .hp-customer img {
  max-width: 110px;
  min-width: 110px;
  object-fit: contain;
  object-position: center;
}

.results-wrap .left-content .hp-customer p {
  margin: 0 0 5px;
  color: #000;
  font-size: 16px;
  font-style: normal;
  font-weight: 600;
  line-height: normal;
  white-space: nowrap;
}

.shopify-section {
  background-color: #fff;
}

.real-results-section .video-container video {
  width: 100%;
  height: 100%;
  object-fit: cover;
  background-color: #000;
  position: relative;
  z-index: 1;
}

.real-results-section {
  padding: 60px 0;
}

.real-results-section .title-wrap {
  text-align: center;
  margin-bottom: 40px;
}

.videos-grid {
  display: grid;
  gap: 20px;
}

.videos-grid.grid-2 {
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  display: flex;
}

.videos-grid.grid-3 {
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
}

.real-results-slide .video-container {
  position: relative;
  width: 100%;
  padding-top: 56.25%;
  overflow: hidden;
  border-radius: 12px;
  background: #000;
  box-shadow: 0 4px 12px rgba(0,0,0,0.1);
}

.real-results-slide .video-container iframe {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  border: 0;
  border-radius: 12px;
}


@media only screen and (max-width: 1300px) { 
  .results-wrap {
    gap: 65px;
    padding-left: 0;
  }

  .results-wrap .left-content {
    max-width: 360px;
  }

  .results-wrap .left-content .hp-customer p {
    white-space: break-spaces;
  }
  
  .videos-grid {
    grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
    gap: 25px;
  }
}

@media only screen and (max-width: 1060px) {
  .results-wrap {
    flex-flow: column;
    gap: 40px;
    align-items: center;
  }

  .results-wrap .left-content .hp-customer {
    justify-content: center;
  }

  .results-wrap .left-content {
    max-width: 100%;
    text-align: center;
    width: 100%;
    padding-right: 15px;
  }
  
  .videos-grid {
    width: 100%;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  }
}

@media only screen and (max-width: 767px) {
  .results-wrap .left-content h2 {
    font-size: 24px;
  }

  .real-results-section {
    padding: 30px 0;
  }

  .real-results-section .title-wrap h2 { 
    font-size: 24px;
  }

  .results-wrap .left-content .hp-customer {
    margin-top: 30px;
    flex-direction: column;
  }

  .real-results-section .custom-play-button svg {
    width: 50px;
    height: 50px;
  }

  .videos-grid.grid-3 .grid-item {
        width: 100%;
  }
  
  .videos-grid {
    grid-template-columns: 1fr;
    gap: 20px;
  }
  
  .real-results-section .video-container {
           min-height: 100%;
        height: 100%;
        aspect-ratio: 3 / 3;
  }

  .real-results-section .title-wrap p {
    font-size: 14px;
    margin: 0 0 10px;
}

.real-results-section .title-wrap {
  margin: 0 0 20px;
}
}

body.gradient.product.power-twist-periotome-posterior-root-remover-set-of-2 .section-real-results:first-of-type {
    display: none;
}
</style>

<script>
document.addEventListener('DOMContentLoaded', function () {
  const section = document.querySelector('#videoSection-{{ section.id }}');
  if (!section) return;

  const videos = section.querySelectorAll('.videos-grid video');
  const buttons = section.querySelectorAll('.custom-play-button');
  const containers = section.querySelectorAll('.video-container');

  function pauseAllVideos() {
    videos.forEach(video => {
      video.pause();
      const container = video.closest('.video-container');
      const playIcon = container.querySelector('.play-icon');
      const pauseIcon = container.querySelector('.pause-icon');
      const thumbnail = container.querySelector('.video-thumbnail');

      container.classList.remove('playing', 'loading');
      playIcon.style.display = 'block';
      pauseIcon.style.display = 'none';
      if (thumbnail) thumbnail.style.opacity = '1';
    });
  }

  videos.forEach(video => {
    const container = video.closest('.video-container');

    video.load();

    video.addEventListener('loadstart', () => container.classList.add('loading'));
    video.addEventListener('loadeddata', () => container.classList.remove('loading'));
    video.addEventListener('canplaythrough', () => container.classList.remove('loading'));

    video.addEventListener('ended', () => {
      const playIcon = container.querySelector('.play-icon');
      const pauseIcon = container.querySelector('.pause-icon');
      const thumbnail = container.querySelector('.video-thumbnail');
      container.classList.remove('playing');
      playIcon.style.display = 'block';
      pauseIcon.style.display = 'none';
      if (thumbnail) thumbnail.style.opacity = '1';
      video.currentTime = 0;
    });
  });

  buttons.forEach(button => {
    button.addEventListener('click', function (e) {
      e.preventDefault();
      const container = this.closest('.video-container');
      const video = container.querySelector('video');
      const playIcon = this.querySelector('.play-icon');
      const pauseIcon = this.querySelector('.pause-icon');
      const thumbnail = container.querySelector('.video-thumbnail');

      if (!video) return;

      if (video.paused) {
        pauseAllVideos();
        container.classList.add('loading');
        video.play().then(() => {
          container.classList.remove('loading');
          container.classList.add('playing');
          playIcon.style.display = 'none';
          pauseIcon.style.display = 'block';
          if (thumbnail) thumbnail.style.opacity = '0';
        }).catch(() => {});
      } else {
        video.pause();
        container.classList.remove('playing', 'loading');
        playIcon.style.display = 'block';
        pauseIcon.style.display = 'none';
        if (thumbnail) thumbnail.style.opacity = '1';
      }
    });
  });

  const observer = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
      if (!entry.isIntersecting) {
        const video = entry.target.querySelector('video');
        if (video && !video.paused) {
          video.pause();
          pauseAllVideos();
        }
      }
    });
  }, { threshold: 0.3 });

  containers.forEach(container => observer.observe(container));

  document.addEventListener('visibilitychange', () => {
    if (document.hidden) pauseAllVideos();
  });
});

</script>

{% schema %}
{
  "name": "Real Results",
  "class": "section-real-results",
  "settings": [
    {
      "type": "text",
      "id": "heading",
      "label": "Heading"
    },
    {
      "type": "richtext",
      "id": "content",
      "label": "Content"
    },
    {
      "type": "checkbox",
      "id": "show_usage",
      "label": "Show Clinic Usage",
      "default": false,
      "info": "Check this to show clinic usage videos. Uncheck to show feedback videos."
    },
     {
      "type": "select",
      "id": "grid_columns",
      "label": "Grid Layout",
      "options": [
        {
          "value": "2",
          "label": "2 Columns"
        },
        {
          "value": "3",
          "label": "3 Columns"
        },
        {
          "value": "4",
          "label": "4 Columns"
        }
      ],
      "default": "2",
      "info": "Choose number of columns for video grid layout"
    }
  ],
  "blocks": [
    {
      "type": "video_block",
      "name": "Testimonial Video",
      "settings": [
        {
          "type": "video",
          "id": "video",
          "label": "Video File"
        },
        {
          "type": "image_picker",
          "id": "thumbnail",
          "label": "Overlay Image (optional)"
        }
      ]
    }
  ],
  "max_blocks": 10,
  "presets": [
    {
      "name": "Real Results Section",
      "category": "Testimonials",
      "blocks": []
    }
  ]
}
{% endschema %}