{%- comment -%}Do not edit this file{%- endcomment -%}
{% raw %}
  {%- assign swatch_options = 'Colour~~Color' | downcase | split: "~~" | uniq -%}
  {%- assign image_options  = '' | downcase | split: "~~" | uniq -%}
  {%- assign text_options   = 'Size' | downcase | split: "~~" | uniq  -%}

  {%- assign image_size     = '360x504' -%}
  {%- assign no_image = 'https://cdn.shopify.com/s/images/themes/product-1.png' -%}

  {%- assign featured_image            = product.featured_image -%}
  {%- assign product_price             = product.price -%}
  {%- assign product_compare_at_price  = product.compare_at_price -%}
  {%- assign selected_or_first_available_variant = product.selected_or_first_available_variant -%}
  {%- assign variant_url = '' -%}
    {%- if product.selected_or_first_available_variant -%}
    {%- assign variant_url = '?variant=' | append: product.selected_or_first_available_variant.id -%}
  {%- endif -%}
      {% if product.selected_variant %}
    {% assign selected_or_first_available_variant = product.selected_variant %}
    {% assign product_price             = selected_or_first_available_variant.price %}
    {% assign product_compare_at_price  = selected_or_first_available_variant.compare_at_price %}
    {% if selected_or_first_available_variant.image %}
      {% assign featured_image = selected_or_first_available_variant.image %}
    {% endif %}
  {% endif %}
                            {%- assign variants_count = product.variants | size -%}
  {% endraw %}
  {% assign str = "" %}
  {% for item in cart.items %}
  {% assign str = str | append: item.variant_id | append: ":" | append: item.quantity | append: "-" %}
  {% endfor %}
  {% raw %}
  {% assign lazy_load = false %}  
  {%- if forloop.index > 2 -%}
    {%- assign lazy_load = true -%}
  {%- endif -%}

  {%- assign card_product = product -%} 
  {%- assign media_aspect_ratio = section.settings.image_ratio -%}
  {%- assign image_shape = section.settings.image_shape -%}
  {%- assign show_secondary_image = section.settings.show_secondary_image -%}
  {%- assign show_vendor = section.settings.show_vendor -%}
  {%- assign show_rating = section.settings.show_rating -%}
  {%- assign quick_add = section.settings.quick_add -%}
  {%- assign section_id = section.id %}

  {%- liquid
    assign ratio = 1
    if card_product.featured_image and media_aspect_ratio == 'portrait'
      assign ratio = 0.8
    elsif card_product.featured_image and media_aspect_ratio == 'adapt'
      assign ratio = card_product.featured_image.aspect_ratio
    endif
    if ratio == 0 or ratio == null
      assign ratio = 1
    endif
  -%}
  
  <li{% if showPageData %} data-page="{{page}}" {% endif %}
    class="grid__item{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}"
    {% if settings.animations_reveal_on_scroll %}
      data-cascade
      style="--animation-order: {{ forloop.index }};"
    {% endif %}    
  >

    <div class="card-wrapper product-card-wrapper underline-links-hover">
    <div
      class="
        card card--{{ settings.card_style }}
        {% if card_product.featured_image %} card--media{% else %} card--text{% endif %}
        {% if settings.card_style == 'card' %} color-{{ section.settingscustom.card_color_scheme }} gradient{% endif %}
        {% if image_shape and image_shape != 'default' %} card--shape{% endif %}
        {% if extend_height %} card--extend-height{% endif %}
        {% if card_product.featured_image == nil and settings.card_style == 'card' %} ratio{% endif %}
        {% if horizontal_class %} card--horizontal{% endif %}
      "
      style="--ratio-percent: {{ 1 | divided_by: ratio | times: 100 }}%;"
    >
      <div
        class="card__inner {% if settings.card_style == 'standard' %}color-{{ section.settingscustom.card_color_scheme }} gradient{% endif %}{% if card_product.featured_image or settings.card_style == 'standard' %} ratio{% endif %}"
        style="--ratio-percent: {{ 1 | divided_by: ratio | times: 100 }}%;"
      >
                {%- if card_product.featured_image -%}
          <div class="card__media{% if image_shape and image_shape != 'default' %} shape--{{ image_shape }} color-{{ section.settingscustom.card_color_scheme }} gradient{% endif %}">
            <div class="media media--transparent media--hover-effect">
              {% comment %}theme-check-disable ImgLazyLoading{% endcomment %}
              <img
                srcset="
                  {%- if card_product.featured_image.width >= 165 -%}{{ card_product.featured_image | img_url: '165x' }} 165w,{%- endif -%}
                  {%- if card_product.featured_image.width >= 360 -%}{{ card_product.featured_image | img_url: '360x' }} 360w,{%- endif -%}
                  {%- if card_product.featured_image.width >= 533 -%}{{ card_product.featured_image | img_url: '533x' }} 533w,{%- endif -%}
                  {%- if card_product.featured_image.width >= 720 -%}{{ card_product.featured_image | img_url: '720x' }} 720w,{%- endif -%}
                  {%- if card_product.featured_image.width >= 940 -%}{{ card_product.featured_image | img_url: '940x' }} 940w,{%- endif -%}
                  {%- if card_product.featured_image.width >= 1066 -%}{{ card_product.featured_image | img_url: '1066x' }} 1066w,{%- endif -%}
                  {{ card_product.featured_image | img_url: '533x' }} {{ card_product.featured_image.width }}w
                "
                src="{{ card_product.featured_image | img_url: '533x' }}"
                sizes="(min-width: {{ settings.page_width }}px) {{ settings.page_width | minus: 130 | divided_by: 4 }}px, (min-width: 990px) calc((100vw - 130px) / 4), (min-width: 750px) calc((100vw - 120px) / 3), calc((100vw - 35px) / 2)"
                alt="{{ card_product.featured_image.alt | escape }}"
                class="motion-reduce"
                {% unless lazy_load == false %}
                  loading="lazy"
                {% endunless %}
                width="{{ card_product.featured_image.width }}"
                height="{{ card_product.featured_image.height }}"
              >
              {% comment %}theme-check-enable ImgLazyLoading{% endcomment %}

              {%- if card_product.images[1] != null and show_secondary_image -%}
                <img
                  srcset="
                    {%- if card_product.images[1].width >= 165 -%}{{ card_product.images[1] | img_url: '165x' }} 165w,{%- endif -%}
                    {%- if card_product.images[1].width >= 360 -%}{{ card_product.images[1] | img_url: '360x' }} 360w,{%- endif -%}
                    {%- if card_product.images[1].width >= 533 -%}{{ card_product.images[1] | img_url: '533x' }} 533w,{%- endif -%}
                    {%- if card_product.images[1].width >= 720 -%}{{ card_product.images[1] | img_url: '720x' }} 720w,{%- endif -%}
                    {%- if card_product.images[1].width >= 940 -%}{{ card_product.images[1] | img_url: '940x' }} 940w,{%- endif -%}
                    {%- if card_product.images[1].width >= 1066 -%}{{ card_product.images[1] | img_url: '1066x' }} 1066w,{%- endif -%}
                    {{ card_product.images[1] | img_url: '533x' }} {{ card_product.images[1].width }}w
                  "
                  src="{{ card_product.images[1] | img_url: '533x' }}"
                  sizes="(min-width: {{ settings.page_width }}px) {{ settings.page_width | minus: 130 | divided_by: 4 }}px, (min-width: 990px) calc((100vw - 130px) / 4), (min-width: 750px) calc((100vw - 120px) / 3), calc((100vw - 35px) / 2)"
                  alt=""
                  class="motion-reduce"
                  loading="lazy"
                  width="{{ card_product.images[1].width }}"
                  height="{{ card_product.images[1].height }}"
                >
              {%- endif -%}
            </div>
          </div>
        {%- endif -%}
        <div class="card__content">
          <div class="card__information">
            <h3
              class="card__heading"
              {% if card_product.featured_image == null and settings.card_style == 'standard' %}
                id="title-{{ section_id }}-{{ card_product.id }}"
              {% endif %}
            >
              <a
                href="{{ card_product.url }}"
                id="StandardCardNoMediaLink-{{ section_id }}-{{ card_product.id }}"
                class="full-unstyled-link"
                aria-labelledby="StandardCardNoMediaLink-{{ section_id }}-{{ card_product.id }} NoMediaStandardBadge-{{ section_id }}-{{ card_product.id }}"
              >
                {{ card_product.title | escape }}
              </a>
            </h3>
            
          </div>
          <div class="card__badge {{ settings.badge_position }}">
            {%- if card_product.available == false -%}
              <span
                id="NoMediaStandardBadge-{{ section_id }}-{{ card_product.id }}"
                class="badge badge--bottom-left color-{{ section.settingscustom.sold_out_badge_color_scheme }}"
              >
                {% endraw %}{{- themeTranslation.products.product.sold_out -}}{% raw %}
              </span>
            {%- elsif card_product.compare_at_price > card_product.price and card_product.available -%}
              <span
                id="NoMediaStandardBadge-{{ section_id }}-{{ card_product.id }}"
                class="badge badge--bottom-left color-{{ settings.sale_badge_color_scheme }}"
              >
                {% endraw %}{{- themeTranslation.products.product.on_sale -}}{% raw %}
              </span>
            {%- endif -%}
          </div>
        </div>
      </div>
      <div class="card__content">
        <div class="card__information">
          <h3
            class="card__heading{% if card_product.featured_image or settings.card_style == 'standard' %} h5{% endif %}"
            {% if card_product.featured_image or settings.card_style == 'card' %}
              id="title-{{ section_id }}-{{ card_product.id }}"
            {% endif %}
          >
            <a
              href="{{ card_product.url }}"
              id="CardLink-{{ section_id }}-{{ card_product.id }}"
              class="full-unstyled-link"
              aria-labelledby="CardLink-{{ section_id }}-{{ card_product.id }} Badge-{{ section_id }}-{{ card_product.id }}"
            >
              {{ card_product.title | escape }}
            </a>
          </h3>

          
          <div class="card-information">
            
            {%- if show_vendor -%}
              <span class="visually-hidden">{% endraw %}{{ themeTranslation.accessibility.vendor }}{% raw %}</span>
              <div class="caption-with-letter-spacing light">{{ card_product.vendor }}</div>
            {%- endif -%}

            {%- if show_rating and card_product.metafields.reviews.rating != blank -%}
              {% liquid
                assign rating_decimal = 0
                assign decimal = card_product.metafields.reviews.rating | modulo: 1
                if decimal >= 0.3 and decimal <= 0.7
                  assign rating_decimal = 0.5
                elsif decimal > 0.7
                  assign rating_decimal = 1
                endif
              %}
              <div
                class="rating"
                role="img"
              >
                <span
                  aria-hidden="true"
                  class="rating-star"
                  style="--rating: {{ card_product.metafields.reviews.rating | floor }}; --rating-max: 5; --rating-decimal: {{ rating_decimal }};"
                ></span>
              </div>
              <p class="rating-text caption">
                <span aria-hidden="true">
                  {{- card_product.metafields.reviews.rating.value }} / 5
                </span>
              </p>
              <p class="rating-count caption">
                <span aria-hidden="true">({{ card_product.metafields.reviews.rating_count }})</span>
                <span class="visually-hidden">
                  {{- card_product.metafields.reviews.rating_count }}
                  {% endraw %}{{ themeTranslation.accessibility.total_reviews -}}{% raw %}
                </span>
              </p>
            {%- endif -%}
            {%- assign show_compare_at_price = true -%}
            {%- liquid
              if use_variant
                assign target = card_product.selected_or_first_available_variant
              else
                assign target = card_product
              endif
            
              assign compare_at_price = target.compare_at_price
              assign price = target.price | default: 1999
              assign price_min = card_product.price_min
              assign price_max = card_product.price_max
              assign available = target.available | default: false
              assign money_price = price | money
              assign money_price_min = price_min | money
              assign money_price_max = price_max | money
              if settings.currency_code_enabled
                assign money_price = price | money_with_currency
                assign money_price_min = price_min | money_with_currency
                assign money_price_max = price_max | money_with_currency
              endif
            
            -%}
            {%- if target == card_product and card_product.price_varies -%}
            {%- assign price = money_price %} 
            {%- capture money_price %} {% endraw %}{{ themeTranslation.products.product.price.from_price_html }}{% raw %} {%- endcapture -%}
            {%- endif -%}
            <div
              class="
                price
                {%- if price_class %} {{ price_class }}{% endif -%}
                {%- if available == false %} price--sold-out{% endif -%}
                {%- if compare_at_price > price and card_product.quantity_price_breaks_configured != true %} price--on-sale{% endif -%}
                {%- if compare_at_price > price and card_product.quantity_price_breaks_configured %} volume-pricing--sale-badge{% endif -%}
                {%- if card_product.price_varies == false and card_product.compare_at_price_varies %} price--no-compare{% endif -%}
                {%- if show_badges %} price--show-badge{% endif -%}
              "
            >
              <div class="price__container">
                <div class="price__regular">
                  {%- if card_product.quantity_price_breaks_configured -%}
                    {%- if show_compare_at_price and compare_at_price -%}
                      {%- unless card_product.price_varies == false and card_product.compare_at_price_varies %}
                        <span class="visually-hidden visually-hidden--inline">
                          {% endraw %}{{- themeTranslation.products.product.price.regular_price -}}{% raw %}
                        </span>
                        <span>
                          <s class="price-item price-item--regular variant-item__old-price">
                            {% if settings.currency_code_enabled %}
                              {{ compare_at_price | money_with_currency }}
                            {% else %}
                              {{ compare_at_price | money }}
                            {% endif %}
                          </s>
                        </span>
                      {%- endunless -%}
                    {%- endif -%}
                    <span class="visually-hidden visually-hidden--inline">{% endraw %}{{ themeTranslation.products.product.price.regular_price }}{% raw %}</span>
                    <span class="price-item price-item--regular">
                      {{ money_price_min }} - {{ money_price_max }}
                    </span>
                  {%- else -%}
                    <span class="visually-hidden visually-hidden--inline">{% endraw %}{{ themeTranslation.products.product.price.regular_price }}{% raw %}</span>
                    <span class="price-item price-item--regular">
                      {{ money_price }}
                    </span>
                  {%- endif -%}
                </div>
                <div class="price__sale">
                  {%- unless product.price_varies == false and product.compare_at_price_varies %}
                    <span class="visually-hidden visually-hidden--inline">{% endraw %}{{ themeTranslation.products.product.price.regular_price }}{% raw %}</span>
                    <span>
                      <s class="price-item price-item--regular">
                        {% if settings.currency_code_enabled %}
                          {{ compare_at_price | money_with_currency }}
                        {% else %}
                          {{ compare_at_price | money }}
                        {% endif %}
                      </s>
                    </span>
                  {%- endunless -%}
                  <span class="visually-hidden visually-hidden--inline">{% endraw %}{{ themeTranslation.products.product.price.sale_price }}{% raw %}</span>
                  <span class="price-item price-item--sale price-item--last">
                    {{ money_price }}
                  </span>
                </div>
              </div>
              {%- if show_badges -%}
                <span class="badge price__badge-sale color-{{ settings.sale_badge_color_scheme }}">
                  {% endraw %}{{ themeTranslation.products.product.on_sale }}{% raw %}
                </span>
            
                <span class="badge price__badge-sold-out color-{{ settings.sold_out_badge_color_scheme }}">
                  {% endraw %}{{ themeTranslation.products.product.sold_out }}{% raw %}
                </span>
              {%- endif -%}
            </div>
            {%- if card_product.quantity_price_breaks_configured -%}
              <div class="card__information-volume-pricing-note">
                <span class="caption">{% endraw %}{{ themeTranslation.products.product.volume_pricing.note }}{% raw %}</span>
              </div>
            {%- endif -%}
                      </div>

                       <div class="product-sku-stock">
          {% if card_product.selected_or_first_available_variant.sku != blank %}
            <span class="product-sku">
              SKU: <strong>{{ card_product.selected_or_first_available_variant.sku }}</strong>
            </span>
          {% endif %}

          {% if card_product.selected_or_first_available_variant.available %}
            <span class="product-stock in-stock">
              <span class="stock-dot"></span> In Stock
            </span>
          {% else %}
            <span class="product-stock out-of-stock">
              <span class="stock-dot"></span> Out of Stock
            </span>
          {% endif %}
        </div>
        </div>
        {% assign product_form_id = 'quick-add-' | append: section_id | append: card_product.id %}
          <div class="quick-add no-js-hidden">
            {%- liquid
              assign qty_rules = false
              if card_product.selected_or_first_available_variant.quantity_rule.min > 1 or card_product.selected_or_first_available_variant.quantity_rule.max != null or card_product.selected_or_first_available_variant.quantity_rule.increment > 1
                assign qty_rules = true
              endif
            -%}
            {%- if variants_count > 1 or qty_rules -%}
              <modal-opener data-modal="#QuickAdd-{{ card_product.id }}">
                <button
                  id="{{ product_form_id }}-submit"
                  type="submit"
                  name="add"
                  class="quick-add__submit button button--full-width button--secondary{% if horizontal_quick_add %} card--horizontal__quick-add animate-arrow{% endif %}"
                  aria-haspopup="dialog"
                  aria-labelledby="{{ product_form_id }}-submit title-{{ section_id }}-{{ card_product.id }}"
                  data-product-url="{{ card_product.url }}"
                >
                  {% endraw %}{{ themeTranslation.products.product.choose_options }}{% raw %}
                  {%- if horizontal_quick_add -%}
                    <span class="icon-wrap">
                      <svg
                        viewBox="0 0 14 10"
                        fill="none"
                        aria-hidden="true"
                        focusable="false"
                        class="icon icon-arrow"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <path fill-rule="evenodd" clip-rule="evenodd" d="M8.537.808a.5.5 0 01.817-.162l4 4a.5.5 0 010 .708l-4 4a.5.5 0 11-.708-.708L11.793 5.5H1a.5.5 0 010-1h10.793L8.646 1.354a.5.5 0 01-.109-.546z" fill="currentColor">
                      </svg>
                    </span>
                  {%- endif -%}
                  <div class="{% if class %}{{ class }}{% else %}loading__spinner hidden{% endif %}">
                    <svg
                      aria-hidden="true"
                      focusable="false"
                      class="spinner"
                      viewBox="0 0 66 66"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <circle class="path" fill="none" stroke-width="6" cx="33" cy="33" r="30"></circle>
                    </svg>
                  </div>
                </button>
              </modal-opener>
              <quick-add-modal id="QuickAdd-{{ card_product.id }}" class="quick-add-modal">
                <div
                  role="dialog"
                  aria-label="{% endraw %}{{ themeTranslation.products.product.choose_product_options }}{% raw %} {{ card_product.title | escape }}"
                  aria-modal="true"
                  class="quick-add-modal__content global-settings-popup"
                  tabindex="-1"
                >
                  <button
                    id="ModalClose-{{ card_product.id }}"
                    type="button"
                    class="quick-add-modal__toggle"
                    aria-label="{{ 'accessibility.close' | t }}"
                  >
                    <svg
                      xmlns="http://www.w3.org/2000/svg"
                      aria-hidden="true"
                      focusable="false"
                      class="icon icon-close"
                      fill="none"
                      viewBox="0 0 18 17"
                    >
                      <path d="M.865 15.978a.5.5 0 00.707.707l7.433-7.431 7.579 7.282a.501.501 0 00.846-.37.5.5 0 00-.153-.351L9.712 8.546l7.417-7.416a.5.5 0 10-.707-.708L8.991 7.853 1.413.573a.5.5 0 10-.693.72l7.563 7.268-7.418 7.417z" fill="currentColor">
                    </svg>
                  </button>
                  <div id="QuickAddInfo-{{ card_product.id }}" class="quick-add-modal__content-info"></div>
                </div>
              </quick-add-modal>
            {%- else -%}
              <product-form data-section-id="{{ section.id }}">
                  <form method="post" action="{{ root_url }}/cart/add" id="{{ product_form_id }}" accept-charset="UTF-8" class="form" enctype="multipart/form-data" novalidate="novalidate" data-type="add-to-cart-form">
                  <input type="hidden" name="form_type" value="product">
                  <input type="hidden" name="utf8" value="✓">
                  <input
                    type="hidden"
                    name="id"
                    value="{{ card_product.selected_or_first_available_variant.id }}"
                    class="product-variant-id"
                    {% if card_product.selected_or_first_available_variant.available == false %}
                      disabled
                    {% endif %}
                  >
                  <button
                    id="{{ product_form_id }}-submit"
                    type="submit"
                    name="add"
                    class="quick-add__submit button button--full-width button--secondary{% if horizontal_quick_add %} card--horizontal__quick-add{% endif %}"
                    aria-haspopup="dialog"
                    aria-labelledby="{{ product_form_id }}-submit title-{{ section_id }}-{{ card_product.id }}"
                    aria-live="polite"
                    data-sold-out-message="true"
                    {% if card_product.selected_or_first_available_variant.available == false %}
                      disabled
                    {% endif %}
                  >
                    <span>
                      {%- if card_product.selected_or_first_available_variant.available -%}
                        {% endraw %}{{ themeTranslation.products.product.add_to_cart }}{% raw %}
                      {%- else -%}
                        {% endraw %}{{ themeTranslation.products.product.sold_out }}{% raw %}
                      {%- endif -%}
                    </span>
                    <span class="sold-out-message hidden">
                      {% endraw %}{{ themeTranslation.products.product.sold_out }}{% raw %}
                    </span>
                    {%- if horizontal_quick_add -%}
                      <span class="icon-wrap">
                        <svg
                          xmlns="http://www.w3.org/2000/svg"
                          aria-hidden="true"
                          focusable="false"
                          class="icon icon-plus"
                          fill="none"
                          viewBox="0 0 10 10"
                        >
                          <path fill-rule="evenodd" clip-rule="evenodd" d="M1 4.51a.5.5 0 000 1h3.5l.01 3.5a.5.5 0 001-.01V5.5l3.5-.01a.5.5 0 00-.01-1H5.5L5.49.99a.5.5 0 00-1 .01v3.5l-3.5.01H1z" fill="currentColor">
                        </svg>
                      </span>
                    {%- endif -%}
                    <div class="{% if class %}{{ class }}{% else %}loading__spinner hidden{% endif %}">
                      <svg
                        aria-hidden="true"
                        focusable="false"
                        class="spinner"
                        viewBox="0 0 66 66"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <circle class="path" fill="none" stroke-width="6" cx="33" cy="33" r="30"></circle>
                      </svg>
                    </div>
                  </button>
                </form>
                 <button class="whislist-cart">
                 <a class="iWishAddColl iwishcheck" href="#" data-variant="{{ card_product.variants.first.id }}" data-product="{{ card_product.id }}" data-pTitle="{{ card_product.title | escape }}"></a>
                 </button>

              </product-form>
            {%- endif -%}  
          </div>
        {% if quick_add == 'standard' %}
          <div class="quick-add no-js-hidden">
            {%- liquid
              assign qty_rules = false
              if card_product.selected_or_first_available_variant.quantity_rule.min > 1 or card_product.selected_or_first_available_variant.quantity_rule.max != null or card_product.selected_or_first_available_variant.quantity_rule.increment > 1
                assign qty_rules = true
              endif
            -%}
            {%- if variants_count > 1 or qty_rules -%}
              <modal-opener data-modal="#QuickAdd-{{ card_product.id }}">
                <button
                  id="{{ product_form_id }}-submit"
                  type="submit"
                  name="add"
                  class="quick-add__submit button button--full-width button--secondary{% if horizontal_quick_add %} card--horizontal__quick-add animate-arrow{% endif %}"
                  aria-haspopup="dialog"
                  aria-labelledby="{{ product_form_id }}-submit title-{{ section_id }}-{{ card_product.id }}"
                  data-product-url="{{ card_product.url }}"
                >
                  {% endraw %}{{ themeTranslation.products.product.choose_options }}{% raw %}
                  {%- if horizontal_quick_add -%}
                    <span class="icon-wrap">
                      <svg
                        viewBox="0 0 14 10"
                        fill="none"
                        aria-hidden="true"
                        focusable="false"
                        class="icon icon-arrow"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <path fill-rule="evenodd" clip-rule="evenodd" d="M8.537.808a.5.5 0 01.817-.162l4 4a.5.5 0 010 .708l-4 4a.5.5 0 11-.708-.708L11.793 5.5H1a.5.5 0 010-1h10.793L8.646 1.354a.5.5 0 01-.109-.546z" fill="currentColor">
                      </svg>
                    </span>
                  {%- endif -%}
                  <div class="{% if class %}{{ class }}{% else %}loading__spinner hidden{% endif %}">
                    <svg
                      aria-hidden="true"
                      focusable="false"
                      class="spinner"
                      viewBox="0 0 66 66"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <circle class="path" fill="none" stroke-width="6" cx="33" cy="33" r="30"></circle>
                    </svg>
                  </div>
                </button>
              </modal-opener>
              <quick-add-modal id="QuickAdd-{{ card_product.id }}" class="quick-add-modal">
                <div
                  role="dialog"
                  aria-label="{% endraw %}{{ themeTranslation.products.product.choose_product_options }}{% raw %} {{ card_product.title | escape }}"
                  aria-modal="true"
                  class="quick-add-modal__content global-settings-popup"
                  tabindex="-1"
                >
                  <button
                    id="ModalClose-{{ card_product.id }}"
                    type="button"
                    class="quick-add-modal__toggle"
                    aria-label="{{ 'accessibility.close' | t }}"
                  >
                    <svg
                      xmlns="http://www.w3.org/2000/svg"
                      aria-hidden="true"
                      focusable="false"
                      class="icon icon-close"
                      fill="none"
                      viewBox="0 0 18 17"
                    >
                      <path d="M.865 15.978a.5.5 0 00.707.707l7.433-7.431 7.579 7.282a.501.501 0 00.846-.37.5.5 0 00-.153-.351L9.712 8.546l7.417-7.416a.5.5 0 10-.707-.708L8.991 7.853 1.413.573a.5.5 0 10-.693.72l7.563 7.268-7.418 7.417z" fill="currentColor">
                    </svg>
                  </button>
                  <div id="QuickAddInfo-{{ card_product.id }}" class="quick-add-modal__content-info"></div>
                </div>
              </quick-add-modal>
            {%- else -%}
              <product-form data-section-id="{{ section.id }}">
                  <form method="post" action="{{ root_url }}/cart/add" id="{{ product_form_id }}" accept-charset="UTF-8" class="form" enctype="multipart/form-data" novalidate="novalidate" data-type="add-to-cart-form">
                  <input type="hidden" name="form_type" value="product">
                  <input type="hidden" name="utf8" value="✓">
                  <input
                    type="hidden"
                    name="id"
                    value="{{ card_product.selected_or_first_available_variant.id }}"
                    class="product-variant-id"
                    {% if card_product.selected_or_first_available_variant.available == false %}
                      disabled
                    {% endif %}
                  >
                  <button
                    id="{{ product_form_id }}-submit"
                    type="submit"
                    name="add"
                    class="quick-add__submit button button--full-width button--secondary{% if horizontal_quick_add %} card--horizontal__quick-add{% endif %}"
                    aria-haspopup="dialog"
                    aria-labelledby="{{ product_form_id }}-submit title-{{ section_id }}-{{ card_product.id }}"
                    aria-live="polite"
                    data-sold-out-message="true"
                    {% if card_product.selected_or_first_available_variant.available == false %}
                      disabled
                    {% endif %}
                  >
                    <span>
                      {%- if card_product.selected_or_first_available_variant.available -%}
                        {% endraw %}{{ themeTranslation.products.product.add_to_cart }}{% raw %}
                      {%- else -%}
                        {% endraw %}{{ themeTranslation.products.product.sold_out }}{% raw %}
                      {%- endif -%}
                    </span>
                    <span class="sold-out-message hidden">
                      {% endraw %}{{ themeTranslation.products.product.sold_out }}{% raw %}
                    </span>
                    {%- if horizontal_quick_add -%}
                      <span class="icon-wrap">
                        <svg
                          xmlns="http://www.w3.org/2000/svg"
                          aria-hidden="true"
                          focusable="false"
                          class="icon icon-plus"
                          fill="none"
                          viewBox="0 0 10 10"
                        >
                          <path fill-rule="evenodd" clip-rule="evenodd" d="M1 4.51a.5.5 0 000 1h3.5l.01 3.5a.5.5 0 001-.01V5.5l3.5-.01a.5.5 0 00-.01-1H5.5L5.49.99a.5.5 0 00-1 .01v3.5l-3.5.01H1z" fill="currentColor">
                        </svg>
                      </span>
                    {%- endif -%}
                    <div class="{% if class %}{{ class }}{% else %}loading__spinner hidden{% endif %}">
                      <svg
                        aria-hidden="true"
                        focusable="false"
                        class="spinner"
                        viewBox="0 0 66 66"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <circle class="path" fill="none" stroke-width="6" cx="33" cy="33" r="30"></circle>
                      </svg>
                    </div>
                  </button>
                </form>
              </product-form>
            {%- endif -%}
          </div>
        {% elsif quick_add == 'bulk' %}
          {% if variants_count == 1 %}
            <quick-add-bulk
              data-min="{{ card_product.selected_or_first_available_variant.quantity_rule.min }}"
              id="quick-add-bulk-{{ card_product.selected_or_first_available_variant.id }}-{{ section.id }}"
              class="quick-add-bulk"
              data-index="{{ card_product.selected_or_first_available_variant.id }}"
            >
              {% if card_product.selected_or_first_available_variant.available == false %}
                <button
                  id="{{ product_form_id }}-submit"
                  type="submit"
                  name="add"
                  class="quick-add__submit button button--full-width button--secondary"
                  aria-labelledby="{{ product_form_id }}-submit title-{{ section_id }}-{{ card_product.id }}"
                  data-sold-out-message="true"
                  disabled
                >
                  <span>{% endraw %}{{ themeTranslation.products.product.sold_out }}{% raw %}</span>
                  <span class="sold-out-message hidden">
                    {% endraw %}{{ themeTranslation.products.product.sold_out }}{% raw %}
                  </span>
                </button>
              {% else %}
                {% assign variant = card_product.selected_or_first_available_variant %}
                {% assign min = 0 %}
                {% assign cartStr = "{% endraw %}{{str}}{% raw %}" | split: "-" %}
                {% assign item_quantity = 0 %}
                {% assign variantId = product.selected_or_first_available_variant.id %}
                {% for cartItem in cartStr %}
                {% if cartItem contains variantId %}
                {% assign cartQuantity = cartItem | split: ":" | last %}
                {% assign item_quantity = item_quantity | plus: cartQuantity %}
                {% endif %}
                {% endfor %}
                
                <quantity-input class="quantity cart-quantity">
                  <button class="quantity__button" name="minus" type="button">
                    <span class="svg-wrapper">
                      <svg xmlns="http://www.w3.org/2000/svg" fill="none" class="icon icon-minus" viewBox="0 0 10 2"><path fill="currentColor" fill-rule="evenodd" d="M.5 1C.5.7.7.5 1 .5h8a.5.5 0 1 1 0 1H1A.5.5 0 0 1 .5 1" clip-rule="evenodd"/></svg>
                    </span>
                  </button>
                  <input
                    class="quantity__input"
                    data-quantity-variant-id="{{ variant.id }}"
                    type="number"
                    name="updates[{{ variant_id }}]"
                    value="{{ item_quantity }}"
                    data-cart-quantity="{{ item_quantity }}"
                    min="{{ min }}"
                    data-min="1"
                    step="1"
                    aria-label="{{ variant.title | escape }}"
                    id="Quantity-{{ variant.id }}"
                    data-index="{{ variant.id }}"
                  >
                  <button class="quantity__button" name="plus" type="button">
                    <span class="svg-wrapper">
                      <svg xmlns="http://www.w3.org/2000/svg" fill="none" class="icon icon-plus" viewBox="0 0 10 10"><path fill="currentColor" fill-rule="evenodd" d="M1 4.51a.5.5 0 0 0 0 1h3.5l.01 3.5a.5.5 0 0 0 1-.01V5.5l3.5-.01a.5.5 0 0 0-.01-1H5.5L5.49.99a.5.5 0 0 0-1 .01v3.5l-3.5.01z" clip-rule="evenodd"/></svg>
                    </span>
                  </button>
                  <div class="progress-bar-container hidden">
                    <div class="progress-bar">
                      <div class="progress-bar-value"></div>
                    </div>
                  </div>
                </quantity-input>
              {% endif %}
            </quick-add-bulk>
          {% else %}
           <div class="quick-add no-js-hidden">
              {%- liquid
                assign product_form_id = 'quick-add-' | append: section_id | append: card_product.id
                assign qty_rules = false
                if card_product.selected_or_first_available_variant.quantity_rule.min > 1 or card_product.selected_or_first_available_variant.quantity_rule.max != null or card_product.selected_or_first_available_variant.quantity_rule.increment > 1
                  assign qty_rules = true
                endif
              -%}
              <modal-opener
                id="QuickBulk-{{ card_product.id }}-{{ section_id }}"
                data-modal="#QuickAddBulk-{{ card_product.id }}-{{ section.id }}"
              >
                <button
                  id="{{ product_form_id }}-submit"
                  type="submit"
                  name="add"
                  class="quick-add__submit button button--full-width button--secondary"
                  aria-haspopup="dialog"
                  aria-labelledby="{{ product_form_id }}-submit title-{{ section_id }}-{{ card_product.id }}"
                  data-product-url="{{ card_product.url }}"
                >
                  {% endraw %}{{ themeTranslation.products.product.choose_options }}{% raw %}
                  <div class="{% if class %}{{ class }}{% else %}loading__spinner hidden{% endif %}">
                    <svg xmlns="http://www.w3.org/2000/svg" class="spinner" viewBox="0 0 66 66"><circle stroke-width="6" cx="33" cy="33" r="30" fill="none" class="path"/></svg>
                  </div>
                </button>
              </modal-opener>
              <modal-dialog
                id="QuickAddBulk-{{ card_product.id }}-{{ section_id }}"
                class="quick-add-modal color-{{ section.settings.color_scheme }}"
              >
                <div
                  role="dialog"
                  aria-label="{{ card_product.title | escape }}"
                  aria-modal="true"
                  class="quick-add-modal__content quick-add-modal__content--bulk global-settings-popup"
                  tabindex="-1"
                >
                  <button
                    id="ModalClose-{{ card_product.id }}"
                    type="button"
                    class="quick-add-modal__toggle"
                    aria-label="{% endraw %}{{ themeTranslation.accessibility.close }}{% raw %}"
                  >
                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" class="icon icon-close" viewBox="0 0 18 17"><path fill="currentColor" d="M.865 15.978a.5.5 0 0 0 .707.707l7.433-7.431 7.579 7.282a.501.501 0 0 0 .846-.37.5.5 0 0 0-.153-.351L9.712 8.546l7.417-7.416a.5.5 0 1 0-.707-.708L8.991 7.853 1.413.573a.5.5 0 1 0-.693.72l7.563 7.268z"/></svg>
                  </button>
                  <div
                    id="QuickAddInfo-{{ card_product.id }}"
                    class="quick-add-modal__content-info quick-add-modal__content-info--bulk"
                  >
                    <div class="quick-add__content-info__media">
                      <div class="quick-add__info">
                        {%- if card_product.featured_image -%}
                          <div
                            class="quick-add__product-media"
                          >
                            <div class="quick-add__product-container global-media-settings">
                              {% comment %}theme-check-disable ImgLazyLoading{% endcomment %}
                              <img
                                    srcset="
                                      {%- if card_product.featured_image.width >= 165 -%}{{ card_product.featured_image | img_url: '165x' }} 165w,{%- endif -%}
                                      {%- if card_product.featured_image.width >= 360 -%}{{ card_product.featured_image | img_url: '360x' }} 360w,{%- endif -%}
                                      {%- if card_product.featured_image.width >= 533 -%}{{ card_product.featured_image | img_url: '533x' }} 533w,{%- endif -%}
                                      {%- if card_product.featured_image.width >= 720 -%}{{ card_product.featured_image | img_url: '720x' }} 720w,{%- endif -%}
                                      {%- if card_product.featured_image.width >= 940 -%}{{ card_product.featured_image | img_url: '940x' }} 940w,{%- endif -%}
                                      {%- if card_product.featured_image.width >= 1066 -%}{{ card_product.featured_image | img_url: '1066x' }} 1066w,{%- endif -%}
                                      {{ card_product.featured_image | img_url: '533x' }} {{ card_product.featured_image.width }}w
                                    "
                                    src="{{ card_product.featured_image | img_url: '533x' }}"
                                    sizes="(min-width: {{ settings.page_width }}px) {{ settings.page_width | minus: 130 | divided_by: 4 }}px, (min-width: 990px) calc((100vw - 130px) / 4), (min-width: 750px) calc((100vw - 120px) / 3), calc((100vw - 35px) / 2)"
                                    alt="{{ card_product.featured_image.alt | escape }}"
                                    class="motion-reduce"
                                    {% unless lazy_load == false %}
                                      loading="lazy"
                                    {% endunless %}
                                    width="{{ card_product.featured_image.width }}"
                                    height="{{ card_product.featured_image.height }}"
                               >
                              {% comment %}theme-check-enable ImgLazyLoading{% endcomment %}
                            </div>
                          </div>
                        {%- endif -%}
                        <a
                          {% if card_product == blank %}
                            role="link" aria-disabled="true"
                          {% else %}
                            href="{{ card_product.url }}"
                          {% endif %}
                          class="link product__view-details animate-arrow small-hide medium-hide"
                        >
                          {% endraw %}{{ themeTranslation.products.product.view_full_details -}}{% raw %}
                          <svg xmlns="http://www.w3.org/2000/svg" fill="none" class="icon icon-arrow" viewBox="0 0 14 10"><path fill="currentColor" fill-rule="evenodd" d="M8.537.808a.5.5 0 0 1 .817-.162l4 4a.5.5 0 0 1 0 .708l-4 4a.5.5 0 1 1-.708-.708L11.793 5.5H1a.5.5 0 0 1 0-1h10.793L8.646 1.354a.5.5 0 0 1-.109-.546" clip-rule="evenodd"/></svg>
                        </a>
                      </div>
                      <div class="quick-add-modal__content-info--bulk-details large-up-hide">
                        <a href="{{ card_product.url }}" class="full-unstyled-link">
                          <h3>{{ card_product.title | escape }}</h3>
                        </a>
                        {%- assign show_compare_at_price = true -%}
                        {%- liquid
                          if use_variant
                            assign target = card_product.selected_or_first_available_variant
                          else
                            assign target = card_product
                          endif
                        
                          assign compare_at_price = target.compare_at_price
                          assign price = target.price | default: 1999
                          assign price_min = card_product.price_min
                          assign price_max = card_product.price_max
                          assign available = target.available | default: false
                          assign money_price = price | money
                          assign money_price_min = price_min | money
                          assign money_price_max = price_max | money
                          if settings.currency_code_enabled
                            assign money_price = price | money_with_currency
                            assign money_price_min = price_min | money_with_currency
                            assign money_price_max = price_max | money_with_currency
                          endif
                        
                        -%}
                        {%- if target == card_product and card_product.price_varies -%}
                        {%- assign price = money_price %} 
                        {%- capture money_price %} {% endraw %}{{ themeTranslation.products.product.price.from_price_html }}{% raw %} {%- endcapture -%}
                        {%- endif -%}
                        <div
                          class="
                            price
                            {%- if price_class %} {{ price_class }}{% endif -%}
                            {%- if available == false %} price--sold-out{% endif -%}
                            {%- if compare_at_price > price and card_product.quantity_price_breaks_configured != true %} price--on-sale{% endif -%}
                            {%- if compare_at_price > price and card_product.quantity_price_breaks_configured %} volume-pricing--sale-badge{% endif -%}
                            {%- if card_product.price_varies == false and card_product.compare_at_price_varies %} price--no-compare{% endif -%}
                            {%- if show_badges %} price--show-badge{% endif -%}
                          "
                        >
                          <div class="price__container">
                            <div class="price__regular">
                              {%- if card_product.quantity_price_breaks_configured -%}
                                {%- if show_compare_at_price and compare_at_price -%}
                                  {%- unless card_product.price_varies == false and card_product.compare_at_price_varies %}
                                    <span class="visually-hidden visually-hidden--inline">
                                      {% endraw %}{{- themeTranslation.products.product.price.regular_price -}}{% raw %}
                                    </span>
                                    <span>
                                      <s class="price-item price-item--regular variant-item__old-price">
                                        {% if settings.currency_code_enabled %}
                                          {{ compare_at_price | money_with_currency }}
                                        {% else %}
                                          {{ compare_at_price | money }}
                                        {% endif %}
                                      </s>
                                    </span>
                                  {%- endunless -%}
                                {%- endif -%}
                                <span class="visually-hidden visually-hidden--inline">{% endraw %}{{ themeTranslation.products.product.price.regular_price }}{% raw %}</span>
                                <span class="price-item price-item--regular">
                                  {{ money_price_min }} - {{ money_price_max }}
                                </span>
                              {%- else -%}
                                <span class="visually-hidden visually-hidden--inline">{% endraw %}{{ themeTranslation.products.product.price.regular_price }}{% raw %}</span>
                                <span class="price-item price-item--regular">
                                  {{ money_price }}
                                </span>
                              {%- endif -%}
                            </div>
                            <div class="price__sale">
                              {%- unless product.price_varies == false and product.compare_at_price_varies %}
                                <span class="visually-hidden visually-hidden--inline">{% endraw %}{{ themeTranslation.products.product.price.regular_price }}{% raw %}</span>
                                <span>
                                  <s class="price-item price-item--regular">
                                    {% if settings.currency_code_enabled %}
                                      {{ compare_at_price | money_with_currency }}
                                    {% else %}
                                      {{ compare_at_price | money }}
                                    {% endif %}
                                  </s>
                                </span>
                              {%- endunless -%}
                              <span class="visually-hidden visually-hidden--inline">{% endraw %}{{ themeTranslation.products.product.price.sale_price }}{% raw %}</span>
                              <span class="price-item price-item--sale price-item--last">
                                {{ money_price }}
                              </span>
                            </div>
                          </div>
                          {%- if show_badges -%}
                            <span class="badge price__badge-sale color-{{ settings.sale_badge_color_scheme }}">
                              {% endraw %}{{ themeTranslation.products.product.on_sale }}{% raw %}
                            </span>
                        
                            <span class="badge price__badge-sold-out color-{{ settings.sold_out_badge_color_scheme }}">
                              {% endraw %}{{ themeTranslation.products.product.sold_out }}{% raw %}
                            </span>
                          {%- endif -%}
                        </div>
                        {%- if card_product.quantity_price_breaks_configured -%}
                          <div class="card__information-volume-pricing-note">
                            <span class="caption">{% endraw %}{{ themeTranslation.products.product.volume_pricing.note }}{% raw %}</span>
                          </div>
                        {%- endif -%}
                      </div>
                    </div>
                    <div>
                      <div class="quick-add-modal__content-info--bulk-details small-hide medium-hide">
                        <a href="{{ card_product.url }}" class="full-unstyled-link">
                          <h3 class="h2">
                            {{ card_product.title | escape }}
                          </h3>
                        </a>
                        {%- assign show_compare_at_price = true -%}
                        {%- liquid
                          if use_variant
                            assign target = card_product.selected_or_first_available_variant
                          else
                            assign target = card_product
                          endif
                        
                          assign compare_at_price = target.compare_at_price
                          assign price = target.price | default: 1999
                          assign price_min = card_product.price_min
                          assign price_max = card_product.price_max
                          assign available = target.available | default: false
                          assign money_price = price | money
                          assign money_price_min = price_min | money
                          assign money_price_max = price_max | money
                          if settings.currency_code_enabled
                            assign money_price = price | money_with_currency
                            assign money_price_min = price_min | money_with_currency
                            assign money_price_max = price_max | money_with_currency
                          endif
                        
                        -%}
                        {%- if target == card_product and card_product.price_varies -%}
                        {%- assign price = money_price %} 
                        {%- capture money_price %} {% endraw %}{{ themeTranslation.products.product.price.from_price_html }}{% raw %} {%- endcapture -%}
                        {%- endif -%}
                        <div
                          class="
                            price
                            {%- if price_class %} {{ price_class }}{% endif -%}
                            {%- if available == false %} price--sold-out{% endif -%}
                            {%- if compare_at_price > price and card_product.quantity_price_breaks_configured != true %} price--on-sale{% endif -%}
                            {%- if compare_at_price > price and card_product.quantity_price_breaks_configured %} volume-pricing--sale-badge{% endif -%}
                            {%- if card_product.price_varies == false and card_product.compare_at_price_varies %} price--no-compare{% endif -%}
                            {%- if show_badges %} price--show-badge{% endif -%}
                          "
                        >
                          <div class="price__container">
                            <div class="price__regular">
                              {%- if card_product.quantity_price_breaks_configured -%}
                                {%- if show_compare_at_price and compare_at_price -%}
                                  {%- unless card_product.price_varies == false and card_product.compare_at_price_varies %}
                                    <span class="visually-hidden visually-hidden--inline">
                                      {% endraw %}{{- themeTranslation.products.product.price.regular_price -}}{% raw %}
                                    </span>
                                    <span>
                                      <s class="price-item price-item--regular variant-item__old-price">
                                        {% if settings.currency_code_enabled %}
                                          {{ compare_at_price | money_with_currency }}
                                        {% else %}
                                          {{ compare_at_price | money }}
                                        {% endif %}
                                      </s>
                                    </span>
                                  {%- endunless -%}
                                {%- endif -%}
                                <span class="visually-hidden visually-hidden--inline">{% endraw %}{{ themeTranslation.products.product.price.regular_price }}{% raw %}</span>
                                <span class="price-item price-item--regular">
                                  {{ money_price_min }} - {{ money_price_max }}
                                </span>
                              {%- else -%}
                                <span class="visually-hidden visually-hidden--inline">{% endraw %}{{ themeTranslation.products.product.price.regular_price }}{% raw %}</span>
                                <span class="price-item price-item--regular">
                                  {{ money_price }}
                                </span>
                              {%- endif -%}
                            </div>
                            <div class="price__sale">
                              {%- unless product.price_varies == false and product.compare_at_price_varies %}
                                <span class="visually-hidden visually-hidden--inline">{% endraw %}{{ themeTranslation.products.product.price.regular_price }}{% raw %}</span>
                                <span>
                                  <s class="price-item price-item--regular">
                                    {% if settings.currency_code_enabled %}
                                      {{ compare_at_price | money_with_currency }}
                                    {% else %}
                                      {{ compare_at_price | money }}
                                    {% endif %}
                                  </s>
                                </span>
                              {%- endunless -%}
                              <span class="visually-hidden visually-hidden--inline">{% endraw %}{{ themeTranslation.products.product.price.sale_price }}{% raw %}</span>
                              <span class="price-item price-item--sale price-item--last">
                                {{ money_price }}
                              </span>
                            </div>
                          </div>
                          {%- if show_badges -%}
                            <span class="badge price__badge-sale color-{{ settings.sale_badge_color_scheme }}">
                              {% endraw %}{{ themeTranslation.products.product.on_sale }}{% raw %}
                            </span>
                        
                            <span class="badge price__badge-sold-out color-{{ settings.sold_out_badge_color_scheme }}">
                              {% endraw %}{{ themeTranslation.products.product.sold_out }}{% raw %}
                            </span>
                          {%- endif -%}
                        </div>
                        {%- if card_product.quantity_price_breaks_configured -%}
                          <div class="card__information-volume-pricing-note">
                            <span class="caption">{% endraw %}{{ themeTranslation.products.product.volume_pricing.note }}{% raw %}</span>
                          </div>
                        {%- endif -%}
                      </div>
                      <bulk-modal
                        id="QuickBulkModal-{{ card_product.id }}-{{ section_id }}"
                        data-url="{{ card_product.url }}"
                        data-section-id="{{ section_id }}"
                        data-product-id="{{ card_product.id }}"
                      >
                      </bulk-modal>
                    </div>
                  </div>
                </div>
              </modal-dialog>
            </div>
          {% endif %}
        {% endif %}
       
        <div class="card__badge {{ settings.badge_position }}">
          {%- if card_product.available == false -%}
            <span
              id="Badge-{{ section_id }}-{{ card_product.id }}"
              class="badge badge--bottom-left color-{{ section.settingscustom.sold_out_badge_color_scheme }}"
            >
              {% endraw %}{{- themeTranslation.products.product.sold_out -}}{% raw %}
            </span>
          {%- elsif card_product.compare_at_price > card_product.price and card_product.available -%}
            <span
              id="Badge-{{ section_id }}-{{ card_product.id }}"
              class="badge badge--bottom-left color-{{ settings.sale_badge_color_scheme }}"
            >
              {% endraw %}{{- themeTranslation.products.product.on_sale -}}{% raw %}
            </span>
          {%- endif -%}
        </div>
      </div>
    </div>
  </div>
  </li>
              {% endraw %}



<script>
    // Enhanced iWish button initialization for dynamically loaded content
class IWishButtonManager {
  constructor() {
    this.initialized = false;
    this.retryCount = 0;
    this.maxRetries = 8;
    this.retryDelays = [50, 100, 200, 400, 600, 1000, 1500, 2000];
    this.initMethods = [
      'window.iWishInit',
      'jQuery.iWish.init',
      'jQuery.iWish',
      'iWish.init',
      'window.iWish'
    ];
  }

  // Main method to initialize iWish buttons in newly loaded content
  initializeIWishButtons(container = document) {
    console.log('🔄 Starting iWish button initialization...');
    
    // Find all iWish buttons in the container
    const iWishButtons = container.querySelectorAll(
      '.iWishAddColl, .iWishAdd, [data-iwclick], .iwishcheck, [class*="iwish"], [id*="iwish"]'
    );
    
    console.log(`Found ${iWishButtons.length} potential iWish buttons`);
    
    if (iWishButtons.length === 0) {
      console.log('No iWish buttons found');
      return;
    }

    // Reset retry count for new initialization
    this.retryCount = 0;
    
    // Start initialization attempts
    this.attemptInitialization(container, iWishButtons);
    
    // Also try manual event binding as backup
    setTimeout(() => {
      this.manuallyBindEvents(iWishButtons);
    }, 1000);
  }

  // Attempt initialization with multiple methods and retries
  attemptInitialization(container, buttons) {
    if (this.retryCount >= this.maxRetries) {
      console.warn('⚠️ Max initialization attempts reached');
      this.fallbackInitialization(buttons);
      return;
    }

    if (this.retryCount >= this.maxRetries) {
  console.warn("⛔ Max retries reached. Stopping initialization attempts.");
  return;
}


    const delay = this.retryDelays[this.retryCount] || 2000;
    
    setTimeout(() => {
      console.log(`🔄 iWish init attempt ${this.retryCount + 1}/${this.maxRetries}`);
      
      let success = false;

      // Try each initialization method
      for (const method of this.initMethods) {
        if (this.tryInitMethod(method)) {
          console.log(`✅ ${method} successful`);
          success = true;
          break;
        }
      }

      // If no standard method worked, try custom approaches
      if (!success) {
        success = this.tryCustomInit();
      }

      // Verify buttons are actually working
      if (success) {
        success = this.verifyButtonsWorking(buttons);
      }

      if (!success) {
        this.retryCount++;
        this.attemptInitialization(container, buttons);
      } else {
        console.log('✅ iWish buttons successfully initialized');
        this.postInitializationSetup(buttons);
      }
    }, delay);

   if (this.retryCount >= this.maxRetries) {
  console.warn("⛔ Max retries reached. Stopping initialization attempts.");
  return;
}

  }

  // Try a specific initialization method
  tryInitMethod(methodPath) {
    try {
      const parts = methodPath.split('.');
      let obj = window;
      
      // Navigate to the method
      for (let i = 0; i < parts.length - 1; i++) {
        if (!obj[parts[i]]) return false;
        obj = obj[parts[i]];
      }
      
      const method = obj[parts[parts.length - 1]];
      if (typeof method === 'function') {
        method.call(obj);
        return true;
      }
    } catch (error) {
      console.error(`Failed to execute ${methodPath}:`, error);
    }
    return false;
  }

  // Try custom initialization approaches
  tryCustomInit() {
    try {
      // Method 1: Look for iWish object and try common methods
      if (window.iWish && typeof window.iWish === 'object') {
        const methods = ['init', 'initialize', 'setup', 'load', 'refresh'];
        for (const method of methods) {
          if (typeof window.iWish[method] === 'function') {
            window.iWish[method]();
            console.log(`✅ window.iWish.${method}() successful`);
            return true;
          }
        }
      }

      // Method 2: Try jQuery plugin patterns
      if (typeof jQuery !== 'undefined') {
        // Common jQuery plugin initialization patterns
        const jQueryMethods = [
          () => jQuery('.iWishAddColl').iWish(),
          () => jQuery('[data-iwclick]').iWish(),
          () => jQuery.fn.iWish && jQuery('.iwishcheck').iWish(),
          () => jQuery(document).trigger('iwish:init'),
          () => jQuery(document).trigger('iWish:refresh')
        ];

        for (const method of jQueryMethods) {
          try {
            method();
            console.log('✅ jQuery iWish method successful');
            return true;
          } catch (e) {
            // Continue to next method
          }
        }
      }

      // Method 3: Trigger custom events that the iWish script might listen for
      const events = ['iwish:init', 'iWish:refresh', 'wishlist:init', 'DOMContentLoaded'];
      for (const eventName of events) {
        try {
          document.dispatchEvent(new Event(eventName));
        } catch (e) {
          // Continue
        }
      }

    } catch (error) {
      console.error('Custom init failed:', error);
    }
    
    return false;
  }

  // Verify that buttons are actually working
  verifyButtonsWorking(buttons) {
    // Check if buttons have been properly initialized
    for (const button of buttons) {
      // Look for signs that the button has been initialized
      if (button.onclick || 
          button.getAttribute('data-initialized') === 'true' ||
          button.classList.contains('iwish-initialized') ||
          button.hasAttribute('data-iwish-ready')) {
        return true;
      }
    }

    // Check if clicking a button would trigger the expected behavior
    const testButton = buttons[0];
    if (testButton) {
      const originalClick = testButton.onclick;
      let hasHandler = false;
      
      // Create a test click event to see if any handlers respond
      const testEvent = new MouseEvent('click', { bubbles: true });
      try {
        hasHandler = testButton.dispatchEvent(testEvent);
      } catch (e) {
        // Event handling failed
      }

      return hasHandler || originalClick !== null;
    }

    return false;
  }

  // Manually bind events as a fallback
  manuallyBindEvents(buttons) {
    console.log('🔧 Attempting manual event binding for iWish buttons...');
    
    buttons.forEach((button, index) => {
      if (button.getAttribute('data-manual-bound') === 'true') {
        return; // Already manually bound
      }

      // Extract data attributes
      const productId = button.getAttribute('data-product') || 
                       button.closest('[data-product-id]')?.getAttribute('data-product-id');
      const variantId = button.getAttribute('data-variant') || 
                       button.closest('[data-variant-id]')?.getAttribute('data-variant-id');
      const productTitle = button.getAttribute('data-pTitle') || 
                           button.closest('.card-wrapper')?.querySelector('.card__heading a')?.textContent?.trim();

      if (productId) {
        button.addEventListener('click', (e) => {
          e.preventDefault();
          this.handleWishlistClick(button, productId, variantId, productTitle);
        });

        button.setAttribute('data-manual-bound', 'true');
        console.log(`✅ Manually bound button ${index + 1} for product ${productId}`);
      }
    });
  }

  // Handle wishlist button click manually
  handleWishlistClick(button, productId, variantId, productTitle) {
    console.log('🎯 Manual wishlist click:', { productId, variantId, productTitle });
    
    // Try to call the original iWish function if available
    if (window.iWish && typeof window.iWish.addToWishlist === 'function') {
      window.iWish.addToWishlist(productId, variantId);
      return;
    }

    // Try jQuery version
    if (typeof jQuery !== 'undefined' && jQuery.iWish) {
      if (typeof jQuery.iWish.add === 'function') {
        jQuery.iWish.add(productId, variantId);
        return;
      }
    }

    // Fallback: trigger a custom event that the iWish script might listen for
    const wishlistEvent = new CustomEvent('addToWishlist', {
      detail: {
        productId: productId,
        variantId: variantId,
        productTitle: productTitle,
        button: button
      }
    });
    
    document.dispatchEvent(wishlistEvent);
    
    // Visual feedback
  }

  // Show visual feedback for wishlist action
 

  // Fallback initialization when all else fails
  fallbackInitialization(buttons) {
    console.log('🚨 Fallback initialization for iWish buttons');
    
    // Set up a MutationObserver to watch for DOM changes
    const observer = new MutationObserver((mutations) => {
      mutations.forEach((mutation) => {
        if (mutation.type === 'childList' && mutation.addedNodes.length > 0) {
          // Check if iWish script has been loaded
          const scripts = document.querySelectorAll('script');
          const iWishScriptLoaded = Array.from(scripts).some(script => 
            script.src.includes('iwish') || script.textContent.includes('iWish')
          );
          
          if (iWishScriptLoaded) {
            setTimeout(() => this.initializeIWishButtons(), 500);
            observer.disconnect();
          }
        }
      });
    });

    observer.observe(document.head, { childList: true });
    
    // Disconnect after 10 seconds to prevent memory leaks
    setTimeout(() => observer.disconnect(), 10000);

    // Also manually bind events as final fallback
    this.manuallyBindEvents(buttons);
  }

  // Post-initialization setup
  postInitializationSetup(buttons) {
    // Add any additional setup needed after successful initialization
    buttons.forEach(button => {
      button.setAttribute('data-iwish-initialized', 'true');
    });

    // Dispatch a custom event to notify that iWish is ready
    document.dispatchEvent(new CustomEvent('iWishReady', { 
      detail: { buttonsCount: buttons.length }
    }));
  }
}

// Create global instance
window.iWishButtonManager = new IWishButtonManager();

// Enhanced loadRecommendations method for your product-recommendations component
// Add this to your existing component
const enhancedLoadRecommendations = function(productId) {
  fetch(`${this.dataset.url}&product_id=${productId}&section_id=${this.dataset.sectionId}`)
    .then((response) => response.text())
    .then((text) => {
      const html = document.createElement('div');
      html.innerHTML = text;
      const recommendations = html.querySelector('product-recommendations');

      if (recommendations?.innerHTML.trim().length) {
        this.innerHTML = recommendations.innerHTML;
        
        // Use the enhanced iWish button manager
        window.iWishButtonManager.initializeIWishButtons(this);
      }

      if (!this.querySelector('slideshow-component') && this.classList.contains('complementary-products')) {
        this.remove();
      }

      if (html.querySelector('.grid__item')) {
        this.classList.add('product-recommendations--loaded');
      }
    })
    .catch((e) => {
      console.error(e);
    });
};

// Auto-initialize on DOM ready
if (document.readyState === 'loading') {
  document.addEventListener('DOMContentLoaded', () => {
    window.iWishButtonManager.initializeIWishButtons();
  });
} else {
  window.iWishButtonManager.initializeIWishButtons();
}

// Also initialize when new content is loaded via AJAX
document.addEventListener('shopify:section:load', () => {
  setTimeout(() => {
    window.iWishButtonManager.initializeIWishButtons();
  }, 100);
});

document.addEventListener('afterFilterUpdate', () => {
  console.log("🔄 Filter update detected");
  window.iWishButtonManager.initializeIWishButtons(document.querySelector('#ProductGridContainer'));
});


// Observe product grid container for AJAX reloads
const productGrid = document.querySelector('#ProductGridContainer, .collection, .product-grid');

if (productGrid) {
  const observer = new MutationObserver((mutations) => {
    for (const mutation of mutations) {
      if (mutation.type === 'childList' && mutation.addedNodes.length > 0) {
        console.log("🔄 Product grid updated, re-initializing iWish buttons...");
        window.iWishButtonManager.initializeIWishButtons(productGrid);
      }
    }
  });

  observer.observe(productGrid, { childList: true, subtree: true });
}


</script>